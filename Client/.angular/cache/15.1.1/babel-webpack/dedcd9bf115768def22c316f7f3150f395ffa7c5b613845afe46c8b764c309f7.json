{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\n//import 'rxjs/add/operator/map';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TasksService {\n  constructor(http) {\n    this.http = http;\n  }\n  //retreiving tasks\n  getTasks() {\n    return this.http.get('https://3.110.131.129:3000/api/tasks').pipe(map(res => res));\n  }\n  addTask(newTask) {\n    var headers = new HttpHeaders();\n    //const headers = new HttpHeaders().set('Content-Type', 'application/json')\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('https://3.110.131.129:3000/api/add', newTask, {\n      headers: headers\n    }).pipe(map(res => res));\n  }\n  deleteTask(id) {\n    return this.http.delete('https://3.110.131.129:3000/api/delete/' + id).pipe(map(res => res));\n  }\n  viewTask(id) {\n    return this.http.get('https://3.110.131.129:3000/api/viewtask/' + id).pipe(map(res => res));\n  }\n  updateTask(id, newTask) {\n    var headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('https://3.110.131.129:3000/api/update/' + id, newTask, {\n      headers: headers\n    }).pipe(map(res => res));\n  }\n}\nTasksService.ɵfac = function TasksService_Factory(t) {\n  return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient));\n};\nTasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TasksService,\n  factory: TasksService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,QAAkB,sBAAsB;AAE3D;AACA,SAASC,GAAG,QAAQ,MAAM;;;AAK1B,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EACxB;EAEA;EACAC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,iCAAiC,CAAC,CAACC,IAAI,CAACN,GAAG,CAACO,GAAG,IAAEA,GAAG,CAAC,CAAC;EAC7E;EAEAC,OAAO,CAACC,OAAW;IACjB,IAAIC,OAAO,GAAC,IAAIX,WAAW,EAAE;IAC7B;IACAW,OAAO,CAACC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACjD,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,+BAA+B,EAACH,OAAO,EAAC;MAACC,OAAO,EAACA;IAAO,CAAC,CAAC,CAACJ,IAAI,CAACN,GAAG,CAACO,GAAG,IAAEA,GAAG,CAAC,CAAC;EACtG;EACAM,UAAU,CAACC,EAAM;IACf,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAAC,mCAAmC,GAACD,EAAE,CAAC,CAACR,IAAI,CAACN,GAAG,CAACO,GAAG,IAAIA,GAAG,CAAC,CAAC;EACvF;EAEAS,QAAQ,CAACF,EAAM;IACb,OAAO,IAAI,CAACX,IAAI,CAACE,GAAG,CAAC,qCAAqC,GAACS,EAAE,CAAC,CAACR,IAAI,CAACN,GAAG,CAACO,GAAG,IAAIA,GAAG,CAAC,CAAC;EACtF;EAEAU,UAAU,CAACH,EAAM,EAACL,OAAW;IAC3B,IAAIC,OAAO,GAAC,IAAIX,WAAW,EAAE;IAC7BW,OAAO,CAACC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACjD,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,mCAAmC,GAACE,EAAE,EAACL,OAAO,EAAC;MAACC,OAAO,EAACA;IAAO,CAAC,CAAC,CAACJ,IAAI,CAACN,GAAG,CAACO,GAAG,IAAEA,GAAG,CAAC,CAAC;EAC7G;;AA5BWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAiB,SAAZjB,YAAY;EAAAkB,YAFX;AAAM","names":["HttpHeaders","map","TasksService","constructor","http","getTasks","get","pipe","res","addTask","newTask","headers","append","post","deleteTask","id","delete","viewTask","updateTask","factory","providedIn"],"sourceRoot":"","sources":["/var/www/html/angular-app/Client/src/app/tasks/tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpHeaders,HttpClient} from '@angular/common/http';\nimport { Task } from './schema/tasks';\n//import 'rxjs/add/operator/map';\nimport { map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  constructor(private http:HttpClient ) { \n  }\n\n  //retreiving tasks\n  getTasks(){\n    return this.http.get('https://3.110.131.129:3000/api/tasks').pipe(map(res=>res));\n  }\n\n  addTask(newTask:any){\n    var headers=new HttpHeaders();\n    //const headers = new HttpHeaders().set('Content-Type', 'application/json')\n    headers.append('Content-Type','application/json');\n    return this.http.post('https://3.110.131.129:3000/api/add',newTask,{headers:headers}).pipe(map(res=>res));\n  }\n  deleteTask(id:any){\n    return this.http.delete('https://3.110.131.129:3000/api/delete/'+id).pipe(map(res => res));\n  }\n\n  viewTask(id:any){\n    return this.http.get('https://3.110.131.129:3000/api/viewtask/'+id).pipe(map(res => res));\n  }\n\n  updateTask(id:any,newTask:any){\n    var headers=new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post('https://3.110.131.129:3000/api/update/'+id,newTask,{headers:headers}).pipe(map(res=>res));\n  }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}