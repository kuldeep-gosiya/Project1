{"ast":null,"code":"import { TasksService } from './tasks.service';\nimport { Task } from './schema/tasks';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tasks.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TasksComponent_tr_17_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \" Yes \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TasksComponent_tr_17_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \" No \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction TasksComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 16)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TasksComponent_tr_17_td_3_Template, 2, 0, \"td\", 17);\n    i0.ɵɵtemplate(4, TasksComponent_tr_17_td_4_Template, 2, 0, \"td\", 17);\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function TasksComponent_tr_17_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.viewTask(task_r2._id));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function TasksComponent_tr_17_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteTask(task_r2._id));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, task_r2.complete ? \"lightgreen\" : \"white\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.task_name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r2.complete == true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r2.complete == false);\n  }\n}\nexport class TasksComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.task = new Task();\n    this._id = '';\n    this.task_name = '';\n    this.complete = false;\n  }\n  ngOnInit() {\n    this.viewTasks();\n  }\n  viewTasks() {\n    this.taskService.getTasks().subscribe({\n      next: data => {\n        this.tasks = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  viewTask(id) {\n    //var tasks=this.tasks;\n    this.taskService.viewTask(id).subscribe({\n      next: data => {\n        this.task = data;\n        this._id = this.task._id;\n        this.task_name = this.task.task_name;\n        this.complete = this.task.complete;\n      }\n    });\n  }\n  addeditTask(addoredit) {\n    const newTask = {\n      task_name: this.task_name,\n      complete: this.complete\n    };\n    if (this._id == '0') {\n      //this.taskService.addTask(newTask).subscribe(({task})=>{this.tasks.push(task);})\n      this.taskService.addTask(newTask).subscribe(data => alert('Task added'));\n    } else {\n      this.taskService.updateTask(this._id, newTask).subscribe(data => alert('Task updated'));\n    }\n  }\n  deleteTask(id) {\n    var tasks = this.tasks;\n    this.taskService.deleteTask(id).subscribe(data => {\n      // if(data.n==1){\n      for (var i = 0; i < tasks.length; i++) {\n        if (tasks[i]._id == id) {\n          tasks.splice(i, 1);\n        }\n        // }\n      }\n    });\n  }\n\n  reloadpage() {\n    window.location.reload();\n  }\n}\nTasksComponent.ɵfac = function TasksComponent_Factory(t) {\n  return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nTasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksComponent,\n  selectors: [[\"app-tasks\"]],\n  features: [i0.ɵɵProvidersFeature([TasksService])],\n  decls: 38,\n  vars: 3,\n  consts: [[\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#myModal\", 1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"click\"], [2, \"width\", \"100%\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"myModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"myModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"submit\"], [\"myForm\", \"\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"task_name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"name\", \"complete\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Save\", 1, \"btn\", \"btn-success\"], [3, \"ngStyle\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"]],\n  template: function TasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r8 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Task Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function TasksComponent_Template_button_click_2_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r1 = i0.ɵɵreference(27);\n        ctx._id = \"0\";\n        return i0.ɵɵresetView(_r1.reset());\n      });\n      i0.ɵɵtext(3, \"Add Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"table\", 1)(6, \"thead\")(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Completed?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, TasksComponent_tr_17_Template, 11, 6, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"div\", 4)(20, \"div\", 5)(21, \"div\", 6)(22, \"button\", 7)(23, \"span\", 8);\n      i0.ɵɵtext(24, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 9)(26, \"form\", 10, 11);\n      i0.ɵɵlistener(\"submit\", function TasksComponent_Template_form_submit_26_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r1 = i0.ɵɵreference(27);\n        ctx.addeditTask(ctx._id);\n        ctx.reloadpage();\n        return i0.ɵɵresetView(_r1.reset());\n      });\n      i0.ɵɵelementStart(28, \"div\", 12)(29, \"div\")(30, \"label\");\n      i0.ɵɵtext(31, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.task_name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\")(34, \"label\");\n      i0.ɵɵtext(35, \"Completed?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.complete = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(37, \"input\", 15);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.task_name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.complete);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["TasksService","Task","i0","TasksComponent","constructor","taskService","ngOnInit","viewTasks","getTasks","subscribe","next","data","tasks","console","log","error","e","viewTask","id","task","_id","task_name","complete","addeditTask","addoredit","newTask","addTask","alert","updateTask","deleteTask","i","length","splice","reloadpage","window","location","reload","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/var/www/html/angular-app/Client/src/app/tasks/tasks.component.ts","/var/www/html/angular-app/Client/src/app/tasks/tasks.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TasksService } from './tasks.service';\nimport { Task } from './schema/tasks';\n\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css'],\n  providers:[TasksService]\n})\nexport class TasksComponent {\n  tasks: Task[]=[];\n  task: Task = new Task;\n  _id:string='';\n  task_name:string='';\n  complete:boolean=false;\nconstructor(private taskService:TasksService){\n\n}\n\nngOnInit(){\nthis.viewTasks();\n\n}\n\nviewTasks(){\n  this.taskService.getTasks().subscribe({\n    next: (data:any) => {\n      this.tasks = data;\n      console.log(data);\n    },\n    error: (e:any) => console.error(e)\n  });\n}\n\nviewTask(id:any){\n //var tasks=this.tasks;\nthis.taskService.viewTask(id).subscribe({next:(data:any)=>{\n  this.task=data;\n  this._id=this.task._id;\n  this.task_name=this.task.task_name;\n  this.complete=this.task.complete;\n}})\n}\n\n\naddeditTask(addoredit:any){\n\n  const newTask={\n    task_name:this.task_name,\n    complete:this.complete\n  }\n  if(this._id=='0'){\n    //this.taskService.addTask(newTask).subscribe(({task})=>{this.tasks.push(task);})\n    this.taskService.addTask(newTask).subscribe(data=>alert('Task added'));\n  }\n  else {\n    this.taskService.updateTask(this._id,newTask).subscribe(data=>alert('Task updated'));\n  }\n\n}\n\n\ndeleteTask(id:any){\n  var tasks=this.tasks;\nthis.taskService.deleteTask(id).subscribe(data=>{\n // if(data.n==1){\n    for (var i=0;i<tasks.length;i++){\n      if(tasks[i]._id==id){\n        tasks.splice(i,1);\n      }\n   // }\n  }\n})\n}\n\nreloadpage(){\n  window.location.reload();\n}\n\n}\n","\n<h1>Task Manager</h1>\n<button type=\"button\" class=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#myModal\" (click)=\"_id='0';myForm.reset();\" >Add Task</button>\n<hr>\n    <table style=\"width:100%;\">\n      <thead>\n        <tr>\n            <th>Task</th>\n            <th>Completed?</th>\n            <th>Edit</th>\n            <th>Delete</th>    \n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let task of tasks\" [ngStyle]=\"{'background-color': task.complete ? 'lightgreen' : 'white'}\">\n            <td>\n                {{task.task_name}}\n            </td>\n            <td *ngIf=\"task.complete==true\">\n                Yes                \n            </td>\n            <td *ngIf=\"task.complete==false\">\n                No\n            </td>\n            <td>\n                <button type=\"button\" class=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#myModal\" (click)=\"viewTask(task._id)\">Edit</button>\n            </td>\n            <td>\n                <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteTask(task._id)\" >Delete</button>\n            </td>\n        </tr>  \n      </tbody>  \n    </table>\n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <!-- <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5> -->\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <form #myForm (submit)=\"addeditTask(_id);reloadpage();myForm.reset();\">\n                <div class=\"form-group\">\n                  <div>\n                    <label>Task</label>\n                    <input type=\"text\" [(ngModel)]=\"task_name\"  name=\"task_name\" class=\"form-control\">\n                  </div>\n                  <div>\n                    <label>Completed?</label>\n                    <input type=\"checkbox\" [(ngModel)]=\"complete\" name=\"complete\">\n                  </div>\n                </div>\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Save\" >\n            </form>             \n        </div>\n      </div>\n    </div>\n  </div>\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}